"""
Django settings for auto project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
from decouple import config, Csv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('DJANGO_KEY', cast=Csv(str))

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = config('ALLOWED_HOSTS', cast=Csv(str))

CSRF_TRUSTED_ORIGINS = config('CSRF_TRUSTED_ORIGINS', cast=Csv(str))

INTERNAL_IPS = [
    "127.0.0.1",
]

# Application definition

INSTALLED_APPS = [
    'common',
    'baton',
    'django_dramatiq',
    'modeltranslation',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # 3rd-party apps that oscar depends on
    'widget_tweaks',
    'sorl.thumbnail',  # Default thumbnail backend, can be replaced
    'django_tables2',

    'rest_framework',
    'social_django',
    'django_filters',
    'knox',
    'drf_spectacular',
    'django_user_agents',
    'treebeard',
    'froala',
    'dbbackup',
    'defender',
    'ajax_select',
    'baton.autodiscover',
    'silk',

]

INSTALLED_APPS.extend([
    'accounts',
    'blogs',
    'categories',
    'tags',
    # 'slideshow',
    'statictext',
])

MIDDLEWARE = [
    'silk.middleware.SilkyMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django_user_agents.middleware.UserAgentMiddleware',
    # 'django.contrib.flatpages.middleware.FlatpageFallbackMiddleware',
]

USER_AGENTS_CACHE = 'default'

ROOT_URLCONF = 'auto.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            # Add the path to your custom template directory
            os.path.join(BASE_DIR, 'templates'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'common.context_processors.base_domain',  # custom context processor to pass base domain to html.
            ],
        },
    },
]

WSGI_APPLICATION = 'auto.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': config('DATABASE_NAME'),
        'USER': config('DATABASE_USER'),
        'PASSWORD': config('DATABASE_PASSWORD'),
        'HOST': config('DATABASE_HOST'),
        'CONN_MAX_AGE': 0 if DEBUG else None,
        'CONN_HEALTH_CHECKS': True,
        'PORT': '5432'
    },
}

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'accounts.authentication.ModelBackend',
    'accounts.authentication.EmailBackend'
]

PHONENUMBER_DEFAULT_REGION = 'IN'

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

AUTH_USER_MODEL = "accounts.User"

# LANGUAGES = global_settings.LANGUAGES + [('en-us', 'English (United States)')]

LANGUAGE_CODE = 'en'

LOCALE_PATHS = [os.path.join(BASE_DIR, 'locale')]

# TIME_ZONE = 'UTC'
TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_L10N = True

USE_TZ = True

BASE_DOMAIN = config('BASE_DOMAIN', cast=str)

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR, "static")

MEDIA_ROOT = os.path.join(BASE_DIR, "media")
MEDIA_URL = 'media/'

STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
)

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

BLOG_READ_TIME_WPM = config('BLOG_READ_TIME_WPM', cast=int)

SECURE_SSL_REDIRECT = True

SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

THUMBNAIL_ALIASES = {
    '': {
        'small': {'size': (50, 50)},
        'medium': {'size': (100, 100)},
        'large': {'size': (200, 200)},
        'xlarge': {'size': (400, 400)},
    },
}

DEVICE_LIMIT = config('DEVICE_LIMIT', cast=int, default=2)
